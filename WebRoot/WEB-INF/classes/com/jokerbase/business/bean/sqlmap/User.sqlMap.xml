<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">

<!-- The SQL in these maps files has purposely been typed with more verbosity than is actually required.
 For example, many of the selects could have just used SELECT * FROM... instead of listing all of the columns.
 This is to demonstrate that even complex SQL can be handled and coded and formatted the way SQL was meant
 to be (i.e. not a bunch of concatenated strings in a Java class). -->

<sqlMap namespace="com.jokerbase.business.bean.User">

  <typeAlias alias="user" type="com.jokerbase.business.bean.User"/>

  <resultMap id="userResult" class="user">
    <result property="userId" column="user_id"/>
    <result property="userName" column="user_name"/>
	<result property="userPassword" column="user_password"/>
	<!-- 
	<result property="roles" column="id" select="com.teacherclub.business.security.entity.Role.selectByUserId"/>
	 -->
  </resultMap> 
  
  <select id="selectById" resultMap="userResult">
    select * from tb_user 
		<dynamic prepend="where">
			<isParameterPresent>
				user_id = #value#
			</isParameterPresent>
		</dynamic> 
  </select>
  
  <select id="selectByMap" resultMap="userResult">
    select * from tb_user 
		<dynamic prepend="where">
			<isNotNull prepend="and" property="userId">
				user_id = #userId#
			</isNotNull>
			<isNotNull prepend="and" property="userName">
				user_name = #userName#
			</isNotNull>
			<isNotNull prepend="and" property="userPassword">
				user_password = #userPassword#
			</isNotNull>
			<isNotNull prepend="and" property="userIsDriver">
				user_is_driver = #userIsDriver#
			</isNotNull>
		</dynamic> 
		<dynamic>
			<isNotNull prepend="order by" property="orderBy">
				$orderBy$ $order$ 
			</isNotNull>	
			<isNotNull prepend="limit" property="limit">
				$start$,$end$
			</isNotNull>
		</dynamic>
  </select>
  
  <insert id="insert" parameterClass="user">
       insert into tb_user
        (
        user_id,
		user_name, 
		user_password
        )
         values
        (
        #userId#,
		#userName#, 
		#userPassword#
        )
    <selectKey resultClass="java.lang.Integer" keyProperty="userId">
    	select last_insert_id(); 
    </selectKey>
  </insert>
  
  <select id="count" resultClass="int">
  		select count(*) from tb_user
  		<dynamic prepend="where">
			<isNotNull prepend="and" property="userId">
				user_id = #userId#
			</isNotNull>
			<isNotNull prepend="and" property="userName">
				user_name = #userName#
			</isNotNull>
			<isNotNull prepend="and" property="userTrueName">
				user_true_name = #userTrueName#
			</isNotNull>
  		</dynamic> 
  </select>
  
  <update id="update" parameterClass="user">
    update tb_user 
	set 
	user_name = #userName# , 
	user_password = #userPassword# , 
	where
	user_id = #userId# ;
  </update>
  <!-- 
   <insert id="insert" parameterClass="user">
       insert into user (username,sex) values (#userName#,#sex#)
    <selectKey resultClass="java.lang.Integer" keyProperty="userId">
    	select last_insert_id(); 
    </selectKey>
  </insert>
  
  <select id="selectById" resultMap="userResult">
    select * from user 
		<dynamic prepend="where">
			<isParameterPresent>
				id = #value#
			</isParameterPresent>
		</dynamic> 
  </select>
  
  <select id="selectByIds" resultMap="userResult" parameterClass="java.util.List">
    select * from user 
		where
			id in
	  		<iterate open="(" close=")" conjunction=",">
      			#[]#
	    	</iterate>
  </select>

  

  <update id="updateByMap">
    update user
    	<dynamic prepend="set">
    		<isNotNull prepend="," property="loginName">
	    		loginname = #loginName#
	    	</isNotNull>
    		<isNotNull prepend="," property="trueName">
	    		truename = #trueName#
	    	</isNotNull>
    	</dynamic> 
    	where id = #id#
  </update>
  
  <update id="updateByIdsMap">
    update user
    	<dynamic prepend="set">
    		<isNotNull prepend="," property="loginName">
	    		loginname = #loginName#
	    	</isNotNull>
    		<isNotNull prepend="," property="trueName">
	    		truename = #trueName#
	    	</isNotNull>
    	</dynamic> 
    	where id in
    	<iterate open="(" close=")" conjunction="," property="ids">
    		#ids[]#
    	</iterate>
  </update>
  	 注意：此处用的是id
   
   <delete id="deleteById" parameterClass="java.lang.Integer">
		delete from user where id=#value#
   </delete>
  
  <delete id="deleteByIds" parameterClass="java.util.List">
  	delete from user
  		where
	  		id in 
	  		<iterate open="(" close=")" conjunction=",">
	      		#[]#
	    	</iterate>
   </delete>  

   <delete id="deleteByMap">
   	delete from user where
   		<dynamic>
     		<isNotNull prepend="and" property="id">
	    		id = #id#
	    	</isNotNull>
   		</dynamic>
   </delete>
  
 -->
</sqlMap>